SvelteFile:Sample1.svelte
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)('<div class='widget-container'>\n    <Widget foo bar='static' :dynamic/>\n    <button on:click="hello()">Say somepin</button>\n    ')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] PARAMS)
      PsiElement([Svelte] OPEN-BLOCK)('#')
      PsiElement([Svelte] BLOCK_STMT_NAME)('if')
      PsiElement([Svelte] PARAMS)(' alive')
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)('\n    <div>Cat is alive</div>\n    ')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] BLOCK_STMT_NAME)
      PsiElement([Svelte] BLOCK_STMT_NAME)('elseif')
    ASTWrapperPsiElement([Svelte] PARAMS)
      PsiElement([Svelte] PARAMS)(' alive === undefined')
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)('\n    Cat is both alive and not alive\n    ')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] BLOCK_STMT_NAME)
      PsiElement([Svelte] BLOCK_STMT_NAME)('else')
    ASTWrapperPsiElement([Svelte] PARAMS)
      <empty list>
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)('\n    Cat is dead\n    ')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] PARAMS)
      PsiElement([Svelte] CLOSE-BLOCK)('/')
      PsiElement([Svelte] BLOCK_STMT_NAME)('if')
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)('\n    <div class='grid'>\n      ')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] PARAMS)
      PsiElement([Svelte] OPEN-BLOCK)('#')
      PsiElement([Svelte] BLOCK_STMT_NAME)('each')
      PsiElement([Svelte] PARAMS)(' rows as row, y')
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)('\n        <div class='row'>\n          ')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] PARAMS)
      PsiElement([Svelte] OPEN-BLOCK)('#')
      PsiElement([Svelte] BLOCK_STMT_NAME)('each')
      PsiElement([Svelte] PARAMS)(' columns as column, x')
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)('\n            <code class='cell'>\n              ')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] PARAMS)
      PsiElement([Svelte] PARAMS)('x + 1')
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)(',')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] PARAMS)
      PsiElement([Svelte] PARAMS)('y + 1')
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)(':\n              <strong>')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] PARAMS)
      PsiElement([Svelte] PARAMS)('row[column]')
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)('</strong>\n            </code>\n          ')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] PARAMS)
      PsiElement([Svelte] CLOSE-BLOCK)('/')
      PsiElement([Svelte] BLOCK_STMT_NAME)('each')
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)('\n        </div>\n      ')
  ASTWrapperPsiElement([Svelte] MACRO)
    PsiElement([Svelte] OPENING)('{{')
    ASTWrapperPsiElement([Svelte] PARAMS)
      PsiElement([Svelte] CLOSE-BLOCK)('/')
      PsiElement([Svelte] BLOCK_STMT_NAME)('each')
    PsiElement([Svelte] CLOSING)('}}')
  PsiElement([Svelte] SVELTE_TEMPLATE_HTML_TEXT)('\n    </div>\n</div>\n\n<script>\n    import Widget from './Widget.html';\n\n    export default {\n        methods: {\n          hello() {\n              alert("Hello!")\n          }\n        },\n        data () {\n            return {\n                dynamic: 'this can change',\n                alive: true\n            }\n        },\n\n        components: {\n            Widget\n        }\n    };\n</script>')